## Assignment Part-1
Q1. Why do we call Python as a general purpose and high-level programming language?

Ans) because python language can be understood by humans.

Q2. Why is Python called a dynamically typed language?

Ans) Because we need not to declare data types for variables explicitly. 
Python can assign the data types to variables based on their types.

Q3. List some pros and cons of Python programming language?

Ans) Procs are as follows:

1) Humans can understand the python script as it is high level alnguage.

2) Python has rich library. so we can use predefined functions/methods instead of writing huge code.

3) We can use python in multiple areas like Desktop Application design, 
web application design, Machine learning, AI and real time big data processing etc.

Cons :

1)Lack of security issues

2) performance issue while reading/writing big data

Q4. In what all domains can we use Python?

Ans) Web development, Gaming, Data Scince, Machine Learning , Desktop application development and etc.

Q5. What are variable and how can we declare them?

Ans) Variable is memory name and which hold the value. 

Q6. How can we take an input from the user in Python?

Ans) we can take an input through command prompt or input() function

Q7. What is the default datatype of the value that has been taken as an input using input() function?

Ans) Default Data type of the value through input() function is string.

Q8. What is type casting?

Ans) Type casting is convert/changing one data type into another data type

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why?

Ans) We can take more than one input through single input() function as collection data type.

Q10. What are keywords?

Ans) Every Language, there would be some pre-defined keywords reveresed  for specfic purpose. 
we cannot use them as varaible or another identifier purpose.

E.g.: While, True, False, If, elif,Else and etc.

Q11. Can we use keywords as a variable? Support your answer with reason.

Ans) We cannot use the keyword as a varaible since those are implemented for specific purpose.

E.g.: True and False are keywords used for reterning yes or no purpose.

Q12. What is indentation? What's the use of indentaion in Python?

Ans) Indentation refers to the spaces at the beginning of a code line. 
     Where in other programming languages the indentation in code is for readability only, 
     the indentation in Python is very important. Python uses indentation to indicate a block of code.

Q13. How can we throw some output in Python?

Ans) We can throw output through print statement in python.

Q14. What are operators in Python?

Ans) In general, every language has operators. these operators are used for doing some task/Operation.

E.g: In Arithmatic OPerators, we have multiple operator for different operations. let's take "+" Operator,
 this act addition for integer data type and concatenation operation for string data type.

Q15. What is difference between / and // operators?

Ans) / and // Operatior are arthematic operators. / operator used for integer division and // operatior used for float division.

Q16. Write a code that gives following as an output.
```
iNeuroniNeuroniNeuroniNeuron
```

Ans) str1='iNeuron'
     print(str1*4)

Q17. Write a code to take a number as an input from the user and check if the number is odd or even.

Ans) num=int(input("please enter the number: "))
     if n%2==0:
	    print("Given number: ",num," is even number")
	 else:
	    print("Given number: ",num," is odd number")

Q18. What are boolean operator?

 Ans) Boolean Operators are True and False.

Q19. What will the output of the following?
```
1 or 0   =1

0 and 0  = 0

True and False and True = False

1 or 0 or 0 = 1
```

Q20. What are conditional statements in Python?

Ans) Conditional statements in Python as follows: 
      1) If
	  2)if - Else
	  3)if- elif -else
	  4)if -elif

Q21. What is use of 'if', 'elif' and 'else' keywords?

Ans) Use of If is used to check the condition. if condition is matched then following statements will be executed.
  if statement is not matched then Else part statements will be executed.
  Elif statement used for checking multiple conditions if required.

Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote".

Ans)  age = int(input("enter the age: "))
      if age >= 18:
	     print("i can vote")
	  else:
	     print("I Cann't vote")


Q23. Write a code that displays the sum of all the even numbers from the given list.
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```

Ans)  numbers = [12, 75, 150, 180, 145, 525, 50]
      print("sum of the elements in the list: ", sum(numbers))
	              or
	   total_sum=0
	   for ele in numbers:
          total_sum += ele
        print("sum of elements in the list is : ", total_sum)
        
	     


Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output.

 Ans) l1=list(input("enter three numbers as list"))
      greast_num = 0
      for num in l1:
         if greast_num < num:
            greast_num=num
      print("greatest number amoung the three is: ", greast_num)

Q25. Write a program to display only those numbers from a list that satisfy the following conditions

- The number must be divisible by five

- If the number is greater than 150, then skip it and move to the next number

- If the number is greater than 500, then stop the loop
```
numbers = [12, 75, 150, 180, 145, 525, 50]
```
Ans)  numbers = [12, 75, 150, 180, 145, 525, 50]
      for num in numbers:
          if num%5== 0:
             if num > 150:
                 continue
             if num > 500:
                 break

Q26. What is a string? How can we declare string in Python?

Ans) String is colection of characters. we can declare the string in single quote or double quote.
     multiline strings can be enclosed by started with three single quotes and ended by three single quotes.

Q27. How can we access the string using its index?
 Ans) String can be accessed by index. index will be started by zero(0).
      if you want to access the third character of the string of STR then STR[2].

Q28. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "iNeuron"
```

Ans) string = "Big Data iNeuron"
     we can get the desired output by string slicing concept.
     print(string[9:]

Q29. Write a code to get the desired output of the following
```
string = "Big Data iNeuron"
desired_output = "norueNi"
```
Ans)    string = "Big Data iNeuron"
        str1=string.split()[2]
        rev_str=''
        for idx in range(1,len(str1)+1):
            rev_str = rev_str + str1[-1*idx]
        print(rev_str)
        or
        str1=string.split()[2]
        print(str1[-1::-1])

Q30. Resverse the string given in the above question.

Ans)    string = "Big Data iNeuron"
        rev_str=''
        for idx in range(1,len(string)+1):
            rev_str = rev_str + string[-1*idx]
        print("Reverse of the ",string , " is: ", rev_str)

Q31. How can you delete entire string at once?

Q32. What is escape sequence?

Ans) An escape sequence is a sequence of characters that, when used inside a character or string, 
     does not represent itself but is converted into another character or series of characters that may be difficult or impossible to express directly, 
     like newline (\n), tab (\t), and so on.

Q33. How can you print the below string?
```
'iNeuron's Big Data Course'
```

Ans print("iNeuron's Big Data Course")

Q34. What is a list in Python?

Ans) List is one of the data structure in the python. it is one of the collection in python. 
     It is collection of heterogenous elements. It is Mutable. It traverse forwaring direction.
     It allows the duplicate elements. it contains different elements in the list. 
     it can be accessed through index. it supports slicing concept. We can append the elements in the existing list. we can delete as well.

Q35. How can you create a list in Python?

 Ans) We can create list in python through different ways. it enclosed by square bractes "[]"
      l = [] # empty list declaration
      l=[10,"King","Big Data Engineer","India",30,True,-40]

Q36. How can we access the elements in a list?

Ans) We can access the elements in list through index or slicing. 
     For example, if you want to access the last element of the list then it follows as below
     print(l[-1])

Q37. Write a code to access the word "iNeuron" from the given list.
```
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"]
``` 

ans) print(lst[4][2])

Q38. Take a list as an input from the user and find the length of the list.

Ans)lst = list(input("please enter the list: "))
    print("No of elements in the list/ length of the list:",  len(lst))

Q39. Add the word "Big" in the 3rd index of the given list.
```
lst = ["Welcome", "to", "Data", "course"]
```

ans) lst.insert(2,"Big")

Q40. What is a tuple? How is it different from list?

Ans) Tuple is also one the data structure in python like list. tuple is immutable where as list is mutable.
     Tuple is enclosed by "()" 
     if there is requirement like list of elements should be changed/modified post declaration then we can go with tuple.
     where as list we can add/delete/modify the elements.

Q41. How can you create a tuple in Python?

Ans) we can create tuple through different ways as follows.

     t1=() # empty tuple
     t2=(10,"King",32,True)



Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason.

Ans)   t1=(1)
        t1.append("King")
        we get error since tuple does not support any operation which leads the changes in existing tuple.

Q43. Can two tuple be appended. If yes, write a code for it. If not, why?
Ans)  No, Tuple's cannot be append since they are immutable.

Q44. Take a tuple as an input and print the count of elements in it.

Ans) t1=tuple(input("enter tuple of elements: "))
     print("No of elements in the tuple/ length of the tuple: ", len(t1))

Q45. What are sets in Python?

Ans) Set is muttable and it does n't allow the duplicate. 
     it enclosed by curley bractes"{}"

Q46. How can you create a set?

Ans) we can create the empty set as follows.

     s1=set()
     s2={1,2,3,4,5,6,7,3,4,10}
     print(s2)
     #o/p: {1.2,3,4,5,6,7,10}

Q47. Create a set and add "iNeuron" in your set.
Ans)  s1=set()
      s1.add("iNeuron")
      print(s1)

Q48. Try to add multiple values using add() function.

Ans) Add() function takes exactly one arguments. if you try to pass two then will get error.

Q49. How is update() different from add()?
Ans) add() function is used to add only one element the set where as update() function used for adding the more than one element in the set.

Q50. What is clear() in sets?

Ans) Clear() function removes all the elements in the sets / empty the sets.

Q51. What is frozen set?

Ans) frozenset() Method creates an immutable Set object from an iterable. 
     It is a built-in Python function. As it is a set object therefore we cannot have duplicate values in the frozenset

Q52. How is frozen set different from set?

Ans) Frozen set is just an immutable version of a Python set object.
     While elements of a set can be modified at any time, elements of the frozen set remain the same after creation

Q53. What is union() in sets? Explain via code.

Ans)  Union is one of the set operator. 
      it gets the all the elements from the sets and remove/delete the duplicate elements among them.
      s1={1,2,3,4,5,6,7,8,9,10}
      s2={1,5,10,20,25}
      print(s1 | s2)
      //O/P {1,2,3,4,5,6,7,8,9,10,20,25}

Q54. What is intersection() in sets? Explain via code.
Ans) Intersection() is one of the set operator. 
      it gets the common elements from the sets.
      s1={1,2,3,4,5,6,7,8,9,10}
      s2={1,5,10,20,25}
      print(s1 & s2 )
      #O/P : {1,5,10}
Q55. What is dictionary in Python?

Ans) Dictionary is one the collection data structure. it contains the key and value pair.
     It enclosed by "{}". it can be accessed by following functions.
     1) Keys()
     2) Values()
     3) items()
     

Q56. How is dictionary different from all other data structures.

Ans) Yes, Dictionary data structure is different against others. 
     we cannot access the directory through indexs/slicing. we cannot use methods for append/update functions.
     Dictionary can be accessed by following functions.
     1) Keys()
     2) Values()
     3) items()

Q57. How can we delare a dictionary in Python?

Ans) We can declare the empty dictionary as follows.

     dict1={}
     dict2={"Name":"King","Age":30}

Q58. What will the output of the following?
```
var = {}
print(type(var))
```

Ans:  <class 'dict' >

Q59. How can we add an element in a dictionary?
Ans)    dict1={} 
        dict1["name"]= "King"

Q60. Create a dictionary and access all the values in that dictionary.

Ans)  dict1={"Name":"King","Age":30,"Skill":"Data Engineer","Country":"India"}
      print(list(dict1.values()))

Q61. Create a nested dictionary and access all the element in the inner dictionary.

Ans) student={"Name":"King","Sno":123,"Section":"A",
              "Address":{"Door No":"1-123","State":"Karnataka","Phone Number":1234567890,"country":"India"}}
     print(student["Address"])
     print(student["Address"]["Door No"])
     print(student["Address"]["State"])
     print(student["Address"]["COuntry"])
     print(student["Address"]["Phone Number"])
     

Q62. What is the use of get() function?

Ans) The get() method returns the value of the item with the specified key.
     car = {
           "brand": "Ford",
           "model": "Mustang",
           "year": 1964
           }

      x = car.get("model")

      print(x)

Q63. What is the use of items() function?

Ans) Items() it is pre-defined function used for dictionary collection for getting keys and values details.
     for k,v in dict1.items():
         print("Key is: ", k ,"  and value is: ",v)

Q64. What is the use of pop() function?
Ans) Pop() : this function is used to delete/remove the last element from the list.

Q65. What is the use of popitems() function?

Ans) The popitem() method removes the item that was last inserted into the dictionary. 
     In versions before 3.7, the popitem() method removes a random item.

Q66. What is the use of keys() function?

Ans) Keys() is a function used for getting list of all the keys available in the dictionary.
     E.g: print(list(dict1.keys()))
     

Q67. What is the use of values() function?

Ans) values() is a function used for getting list of all the values available in the dictionary.
     E.g: print(list(dict1.values()))

Q68. What are loops in Python?

Ans) Loops are iteration statements in pythons. 
     if you want to execute the same task based on multiple time/specified time then we can go for loops.

Q69. How many type of loop are there in Python?

Ans) there are two types of loops available in python. those are as follows.

    1) For Loop
    2) While Loop

Q70. What is the difference between for and while loops?

Ans) Both for used for same purpose i.e iteration.
     If you know how many times a task/action should be executed then we can go with For loop.
     If you do not know how many times a action / block to be executed then we can go with While Loop.

Q71. What is the use of continue statement?

Ans) If you want to continue the execution sequence till specific window/range then we can go with continue statement.

Q72. What is the use of break statement?

Ans) If you want to terminate the execution flow once you reach your window/range/condition then we can go with break statement.

Q73. What is the use of pass statement?

Ans) The pass statement is used as a placeholder for future code. When the pass statement is executed, nothing happens, 
     but you avoid getting an error when empty code is not allowed. 
     Empty code is not allowed in loops, function definitions, class definitions, or in if statements.
     The pass statement is a null statement. 
     But the difference between pass and comment is that comment is ignored by the interpreter whereas pass is not ignored. 

Q74. What is the use of range() function?

Ans) Range function gets the list of elements based on the arguments.it has three argument as follows.
   1) Start -- Mandatory(by default start from 0)
   2) End  -- it optional and exclusive as well
   3) step  -- no of jumps(Default one jump)

Q75. How can you loop over a dictionary?
Ans) We can loop over dictionary by using items() functions.
     For k,v in dict1.items():
         print(k,v)

### Coding problems
Q76. Write a Python program to find the factorial of a given number.

Ans)    num=int(input("enter number"))
        fact = 1
        if num == 0 or num == 1:
            print("factorial is: ", 1)
        for n in range(1,num+1):
            fact=fact*n
        print("factorial of ", num ," is :",fact)
          

Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100

Ans)


def simple_interest(p, t, r):
    print('The principal is', p)
    print('The time period is', t)
    print('The rate of interest is', r)

    si = (p * t * r) / 100

    print('The Simple Interest is', si)
    return si

simple_interest(10000, 6, 8)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.

Ans)

def compound_interest(principle, rate, time):
    # Calculates compound interest
    Amount = principle * (pow((1 + rate / 100), time))
    CI = Amount - principle
    print("Compound interest is", CI)

compound_interest(10000, 10.25, 5)

Q79. Write a Python program to check if a number is prime or not.

Ans) flag=False
     num=int(input("enter number:"))
     if num > 1:
         for i in range(2,num):
             if num%i==0:
                flag=True
     if flag:
        print("Number is not prime:")
     else:
     print("Number is prime")


Q80. Write a Python program to check Armstrong Number.

Q81. Write a Python program to find the n-th Fibonacci Number.
Ans)
num=int(input("enter number:"))
a,b=1,1
l1=[]
for i in range(0,num):
    a,b=b,a+b
    l1.append(a)
print("fibonacci sequecnce of ",num," is : ",l1)


Q82. Write a Python program to interchange the first and last element in a list.

Ans) l1=[1,2,3,4,5]
     temp=l1[-1]
     l1[-1]=l1[0]
     l1[0]=temp
     print(l1)



Q83. Write a Python program to swap two elements in a list.

Ans)

list1= [10,20,30,40,50]
pos1=int(input("enter position1: "))
pos2=int(input("enter position2: "))
temp=list1[pos1]
list1[pos1] = list1[pos2]
list1[pos2] = temp
print(list1)


Q84. Write a Python program to find N largest element from a list.

     l=[10,5,8,20,35]
     print(max(l))
     (or)
     l=[10,5,8,20,35]
     large_element=0
     for ele in l:
        if large_element < ele:
            large_element=ele
     print(large_element)
   

Q85. Write a Python program to find cumulative sum of a list.

Ans) l=[10,5,8,20,35]
     cumm_sum_ele =0
     for ele in l:
        cumm_sum_ele+=ele
     print("Cumm sum of list is :", cumm_sum_ele)


Q86. Write a Python program to check if a string is palindrome or not.

Ans) 

str1=input("enter the string: ")
sub_str1=''
sub_str2=''
len1=round(len(str1)/2)
print(len1)
idx1 =0
for idx in range(0,len1):
    idx1 += 1
    sub_str1 += str1[idx]
    sub_str2 += str1[-1*idx1]
print(sub_str1.upper())
print(sub_str2.upper())
if sub_str1.upper()==sub_str2.upper():
    print("string is palendrome")
else:
    print("string is not palendrome")


Q87. Write a Python program to remove i'th element from a string.

Ans)

str1=input("Enter string: ")
index_pos =int(input("Enter ith index position: "))
x = str1[: index_pos]
y = str1[index_pos+1:]
print(x+y)

Q88. Write a Python program to check if a substring is present in a given string.

ANS)

str1= input ("Enter the string:")
sub_str = input("Enter substring: ")
if sub_str.lower() in str1.lower():
    print("Substring exists")
else:
    print("Substring not exist")


Q89. Write a Python program to find words which are greater than given length k.

Ans)  

str1=input("Enter string: ")
len1 = int(input("enter the length: "))
str2=str1.split()
print(str2)
for words in str2:
    if len(words) > len1:
        print(words, end=" ")

Q90. Write a Python program to extract unquire dictionary values.

Ans)

d1 = {'A': [1, 2, 5, 6, 7, 8],
      'B': [3, 10, 11, 7, 5],
      'C': [4, 3, 6, 12, 10, 8],
      'D': [1, 2, 5, 9, 10]
      }
result = list(sorted({ele for val in d1.values() for ele in val}))
print("The unique values list is : ", result)

Q91. Write a Python program to merge two dictionary.

Ans) 

d1={"name":"White","Age":30,"City":"Bang","Country":"Ind"}
d2={"Skils":{"Python","SQL","Power BI","AWS","Azure"}}
print(d1)
print(d2)
print(d1.update(d2))
print(d1)

Q92. Write a Python program to convert a list of tuples into dictionary.
```
Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
```

l=[('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
d1=dict(l)
print(d1)

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
```
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
```

Ans)

list1=[9, 5, 6]
num_cube=lambda x: x ** 3
cube_res = list(map(num_cube, list1))
t1_lambda = lambda l1, l2 : (l1,l2)
result = list(map(t1_lambda,list1,cube_res))
print(result)


Q94. Write a Python program to get all combinations of 2 tuples.
```
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
```

Q95. Write a Python program to sort a list of tuples by second item.
```
Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]
```

Ans) 

def Sort_List_Tuple(list_tup):
    # getting length of list of tuples
    lst = len(list_tup)
    for i in range(0, lst):
        for j in range(0, lst - i - 1):
            if (list_tup[j][1] > list_tup[j + 1][1]):
                temp = list_tup[j]
                list_tup[j] = list_tup[j + 1]
                list_tup[j + 1] = temp
    return list_tup
t=[('for', 24), ('Geeks', 8), ('Geeks', 30)]
print(Sort_List_Tuple(t))


Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```
Ans)


num=int(input("enter number"))
for i in range(1,num+1):
    for j in range(1,i+1):
        print('*',end=" ")
    print()
            
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```

Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```

Ans)

num = int(input("enter the no of rows: "))
for i in range(1, num+1):
    print(" "*(num-i), end="")
    for j in range(1,i+1):
        print("*", end=" ")
    print()


Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```
Ans)    num=5
        cont=''
        for idx in range(1,num+1):
            cont=cont+str(idx)
            print(cont)

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```
Ans)

        l1=['A','B','C','D','E']
        idx=0
        for cha in l1:
            idx+=1
            print(cha*idx)